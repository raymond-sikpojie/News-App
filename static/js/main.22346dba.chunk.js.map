{"version":3,"sources":["components/Context/index.js","components/NewsDetail.js","components/NavBar.js","components/SideBar.js","components/App.js","index.js"],"names":["Consumer","React","createContext","NewsDetail","props","context","className","href","news","url","target","title","src","urlToImage","alt","NavBar","value","searchBarChange","searchBarSubmit","onSubmit","type","placeholder","onChange","SideBar","dailyWeather","iconUrl","weather","icon","dt_txt","split","shift","description","Math","floor","main","temp","App","state","searchTerm","weatherData","e","setState","preventDefault","api","fetch","then","response","json","data","catch","err","proxy","console","log","lat","lon","getWeather","latitude","longitude","error","setTimeout","result","list","i","length","push","this","city","name","map","arr","key","random","articles","index","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22346dba.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst NewsHeadlineContext = React.createContext();\n\n//export const { Provider, Consumer } = NewsHeadlineContext;\n\n//export const Provider = NewsHeadlineContext.Provider;\n// export const Consumer = NewsHeadlineContext.Consumer;\n\n// export class Provider extends Component {\n//   state = {\n//     news: null,\n//     searchTerm: \"\",\n//     weatherData: null,\n//     dailyWeather: []\n//   };\n\n//   componentDidMount() {\n//     // Getting the news data\n//     const api =\n//       \"http://newsapi.org/v2/top-headlines?country=us&apiKey=ad1db6960259412ab5e8326d56f6ac71\";\n\n//     fetch(api)\n//       .then(response => response.json())\n//       .then(data => {\n//         //const newNews = this.state.news.push(data);\n//         this.setState({\n//           news: data\n//         });\n//       })\n//       .catch(err => console.log(err));\n\n//     // Getting the weather data\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(position => {\n//         let { latitude, longitude } = position.coords;\n//         const api = `http://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=metric&appid=da1c9acfac0a6440fe94733904919962`;\n//         fetch(api)\n//           .then(response => {\n//             return response.json();\n//           })\n//           .then(data => {\n//             this.setState({\n//               weatherData: data\n//             });\n//           })\n//           .catch(err => {\n//             return err;\n//           });\n//       });\n//     }\n\n//     // Get daily weather by creating a function which loops through the weather list array and select every 8th item, since thats when the data for a new day begins. (it shows a 3 hourly weather info for 5 days)\n//     const getDailyWeather = () => {\n//       // Did not wrap the below code block in an if statement because of the 3 secs delay from setTimeout\n//       let result = this.state.weatherData.list;\n//       for (let i = 0; i < result.length; i = i + 8) {\n//         let weather = [...this.state.dailyWeather];\n//         weather.push(result[i]);\n//         this.setState({\n//           dailyWeather: weather\n//         });\n//       }\n//     };\n//     setTimeout(getDailyWeather, 4000);\n//   }\n\n//   searchBarChange = e => {\n//     this.setState({\n//       searchTerm: e.target.value\n//     });\n//   };\n\n//   searchBarSubmit = e => {\n//     e.preventDefault();\n//     if (this.state.searchTerm !== \"\") {\n//       // const api = `http://newsapi.org/v2/top-headlines?country=us&q=${this.state.searchTerm}&apiKey=ad1db6960259412ab5e8326d56f6ac71`;\n//       const api = `http://newsapi.org/v2/everything?q=${this.state.searchTerm}&language=en&apiKey=ad1db6960259412ab5e8326d56f6ac71`;\n//       fetch(api)\n//         .then(response => response.json())\n//         .then(data => {\n//           this.setState({\n//             news: data,\n//             searchTerm: \"\"\n//           });\n//         })\n//         .catch(err => {\n//           return err;\n//         });\n//     }\n//   };\n//   render() {\n//     return (\n//       <NewsHeadlineContext.Provider\n//         value={{\n//           value: this.state.searchTerm,\n//           changeEvents: {\n//             searchBarChange: this.searchBarChange,\n//             searchBarSubmit: this.searchBarSubmit\n//           },\n//           dailyWeather: this.state.dailyWeather.map(arr => {\n//             return arr;\n//           }),\n//           news:\n//             this.state.news !== null\n//               ? this.state.news.articles.map((arr, index) => {\n//                   return arr;\n//                 })\n//               : null\n//         }}\n//       >\n//         {this.props.children}\n//       </NewsHeadlineContext.Provider>\n//     );\n//   }\n// }\n\nexport const Consumer = NewsHeadlineContext.Consumer;\n","import React from \"react\";\nimport { Consumer } from \"./Context\";\n\n// This component contains the title, photo, author and other information.\n\nconst NewsDetail = props => {\n  return (\n    //   the content is wrapped by a link tag to make it clickable\n    <Consumer>\n      {context => (\n        <a className=\"news-detail-link\" href={props.news.url} target=\"_blank\">\n          {props.news !== null ? (\n            // this container below contains the title and image to make positioning easier\n\n            <div className=\"news-info-container\">\n              <div className=\"news-title\">\n                <h3>{props.news.title}</h3>\n              </div>\n              <div className=\"image-container\">\n                <img src={props.news.urlToImage} alt={props.news.title}></img>\n              </div>\n            </div>\n          ) : null}\n        </a>\n      )}\n    </Consumer>\n  );\n};\nexport default NewsDetail;\n","import React from \"react\";\nimport { Consumer } from \"./Context\";\nconst NavBar = ({ value, searchBarChange, searchBarSubmit }) => {\n  //   return (\n  //     <div>\n  //       <div className=\"search-bar\">\n  //         <form onSubmit={props.searchBarSubmit}>\n  //           <input\n  //             type=\"text\"\n  //             value={props.value}\n  //             placeholder=\"Searchbar Here\"\n  //             onChange={props.searchBarChange}\n  //           />\n  //           <button>Search</button>\n  //         </form>\n  //       </div>\n  //     </div>\n  //   );\n\n  return (\n    <Consumer>\n      {(context) => (\n        <div>\n          <div className=\"topnav\">\n            <div className=\"nav-links\">\n              {/* <a className=\"active\" href=\"#home\">\n                Home\n              </a>\n              <a href=\"#about\">About</a>\n              <a href=\"#contact\">Contact</a> */}\n              <div className=\"title-container\">\n                <h2 className=\"heading\">NEWS BREAKER</h2>\n                <p className=\"sub-heading\">Latest news from around the world</p>\n              </div>\n            </div>\n\n            <div className=\"search-container\">\n              <form onSubmit={searchBarSubmit}>\n                <input\n                  className=\"text-field\"\n                  type=\"text\"\n                  placeholder=\"Search latest news\"\n                  value={value}\n                  onChange={searchBarChange}\n                />\n                <button className=\"button\" type=\"submit\">\n                  <i className=\"fas fa-search\"></i>\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </Consumer>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Consumer } from \"./Context\";\nconst SideBar = ({ dailyWeather }) => {\n  // for (let i = 0; i < 40; i = i + 7) {\n  //   console.log(i);\n  // }\n\n  // let days = [\n  //   \"Sunday\",\n  //   \"Monday\",\n  //   \"Tuesday\",\n  //   \"Wednesday\",\n  //   \"Thursday\",\n  //   \"Friday\",\n  //   \"Saturday\"\n  // ];\n  let iconUrl = `http://openweathermap.org/img/wn/${dailyWeather.weather[0].icon}.png`;\n\n  return (\n    <div className=\"sidebar-content\">\n      <p className=\"weather-date\">{dailyWeather.dt_txt.split(\" \").shift()}</p>\n\n      <div className=\"icons-description-container\">\n        <i className=\"icons\">\n          <img src={iconUrl}></img>\n        </i>\n        <p>{dailyWeather.weather[0].description}</p>\n      </div>\n\n      <p>\n        {Math.floor(dailyWeather.main.temp)} <span>&#8451;</span>\n      </p>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport NewsDetail from \"./NewsDetail\";\nimport NavBar from \"./NavBar\";\nimport SideBar from \"./SideBar\";\n\n// import NewsDescription from \"./NewsDescription\";\n\nclass App extends Component {\n  // render() {\n  //   return (\n  //     <div>\n  //       <NavBar />\n  //       <SideBar />\n  //       <NewsDetail />\n  //     </div>\n  //   );\n  // }\n  state = {\n    news: null,\n    searchTerm: \"\",\n    weatherData: null,\n    dailyWeather: [],\n  };\n\n  componentDidMount() {\n    // Getting the news data\n    const proxy = \"https://cors-anywhere.herokuapp.com/\";\n    const api = `${proxy}http://newsapi.org/v2/top-headlines?country=us&apiKey=ad1db6960259412ab5e8326d56f6ac71`;\n\n    fetch(api)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          news: data,\n        });\n      })\n      .catch((err) => console.log(err));\n\n    // Getting the weather data\n    const getWeather = (lat, lon) => {\n      const api = `${proxy}http://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=metric&appid=da1c9acfac0a6440fe94733904919962`;\n      fetch(api)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          this.setState({\n            weatherData: data,\n          });\n        })\n        .catch((err) => {\n          return err;\n        });\n    };\n\n    // Get geolocation data and call getWeather function\n    const url =\n      \"https://api.ipgeolocation.io/ipgeo?apiKey=b87af68decb94ba1b78bd2cc01f274e4&fields=geo\";\n    fetch(url)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        let { latitude, longitude } = data;\n        getWeather(latitude, longitude);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    // Get daily weather by creating a function which loops through the weather list array and select every 8th item, since thats when the data for a new day begins. (it shows a 3 hourly weather info for 5 days)\n    const getDailyWeather = () => {\n      // Did not wrap the below code block in an if statement because of the 3 secs delay from setTimeout\n      let result = this.state.weatherData.list;\n      for (let i = 0; i < result.length; i = i + 8) {\n        let weather = [...this.state.dailyWeather];\n        weather.push(result[i]);\n        this.setState({\n          dailyWeather: weather,\n        });\n      }\n    };\n    setTimeout(getDailyWeather, 3000);\n  }\n\n  searchBarChange = (e) => {\n    this.setState({\n      searchTerm: e.target.value,\n    });\n  };\n\n  searchBarSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.searchTerm !== \"\") {\n      // const api = `http://newsapi.org/v2/top-headlines?country=us&q=${this.state.searchTerm}&apiKey=ad1db6960259412ab5e8326d56f6ac71`;\n      const proxy = \"https://cors-anywhere.herokuapp.com/\";\n      const api = `${proxy}http://newsapi.org/v2/everything?q=${this.state.searchTerm}&language=en&apiKey=ad1db6960259412ab5e8326d56f6ac71`;\n      fetch(api)\n        .then((response) => response.json())\n        .then((data) => {\n          this.setState({\n            news: data,\n            searchTerm: \"\",\n          });\n        })\n        .catch((err) => {\n          return err;\n        });\n    }\n  };\n\n  render() {\n    // console.log(this.state.news);\n    return (\n      <div className=\"main-app\">\n        <NavBar\n          value={this.state.searchTerm}\n          searchBarChange={this.searchBarChange}\n          searchBarSubmit={this.searchBarSubmit}\n        />\n\n        <div className=\"sidebar-newsdetail-container\">\n          <div className=\"heading-sidebar-container\">\n            <h2 className=\"heading\">Weekly Forecast</h2>\n\n            {/* Display the city name */}\n            <i className=\"fas fa-map-marker-alt\"></i>\n            {this.state.weatherData !== null ? (\n              <h3>{this.state.weatherData.city.name}</h3>\n            ) : null}\n\n            {/* Looping through the dailyWeather data */}\n            <div className=\"side-bar-container\">\n              {this.state.dailyWeather.map((arr) => {\n                return <SideBar dailyWeather={arr} key={1 + Math.random()} />;\n              })}\n            </div>\n          </div>\n\n          {/* Looping through the received news data */}\n          <div className=\"news-detail-container\">\n            {this.state.news !== null\n              ? this.state.news.articles.map((arr, index) => {\n                  return <NewsDetail news={arr} key={1 + Math.random()} />;\n                })\n              : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"./components/Context\";\n//import App from \"./Components\"\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n  // <Provider>\n  //   <App />\n  // </Provider>,\n  // document.getElementById(\"root\")\n);\n"],"sourceRoot":""}